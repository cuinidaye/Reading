// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift

import Foundation
import Rswift
import UIKit

/// This `R` struct is code generated, and contains references to static resources.
struct R {
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    private init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    private init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    private init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 14 images.
  struct image {
    /// Image `common_network_error`.
    static let common_network_error = ImageResource(bundle: _R.hostingBundle, name: "common_network_error")
    /// Image `tabbar_book_n_`.
    static let tabbar_book_n_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_book_n_")
    /// Image `tabbar_book_s_`.
    static let tabbar_book_s_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_book_s_")
    /// Image `tabbar_choice_n_`.
    static let tabbar_choice_n_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_choice_n_")
    /// Image `tabbar_choice_s_`.
    static let tabbar_choice_s_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_choice_s_")
    /// Image `tabbar_classify_n_`.
    static let tabbar_classify_n_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_classify_n_")
    /// Image `tabbar_classify_s_`.
    static let tabbar_classify_s_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_classify_s_")
    /// Image `tabbar_my_n_`.
    static let tabbar_my_n_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_my_n_")
    /// Image `tabbar_my_s_`.
    static let tabbar_my_s_ = ImageResource(bundle: _R.hostingBundle, name: "tabbar_my_s_")
    /// Image `usercenter_consume_n`.
    static let usercenter_consume_n = ImageResource(bundle: _R.hostingBundle, name: "usercenter_consume_n")
    /// Image `usercenter_member_n`.
    static let usercenter_member_n = ImageResource(bundle: _R.hostingBundle, name: "usercenter_member_n")
    /// Image `usercenter_more_n`.
    static let usercenter_more_n = ImageResource(bundle: _R.hostingBundle, name: "usercenter_more_n")
    /// Image `usercenter_recharge_n`.
    static let usercenter_recharge_n = ImageResource(bundle: _R.hostingBundle, name: "usercenter_recharge_n")
    /// Image `usercenter_settings_n`.
    static let usercenter_settings_n = ImageResource(bundle: _R.hostingBundle, name: "usercenter_settings_n")
    
    /// `UIImage(named: "common_network_error", bundle: ..., traitCollection: ...)`
    static func common_network_error(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.common_network_error, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_book_n_", bundle: ..., traitCollection: ...)`
    static func tabbar_book_n_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_book_n_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_book_s_", bundle: ..., traitCollection: ...)`
    static func tabbar_book_s_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_book_s_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_choice_n_", bundle: ..., traitCollection: ...)`
    static func tabbar_choice_n_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_choice_n_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_choice_s_", bundle: ..., traitCollection: ...)`
    static func tabbar_choice_s_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_choice_s_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_classify_n_", bundle: ..., traitCollection: ...)`
    static func tabbar_classify_n_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_classify_n_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_classify_s_", bundle: ..., traitCollection: ...)`
    static func tabbar_classify_s_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_classify_s_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_my_n_", bundle: ..., traitCollection: ...)`
    static func tabbar_my_n_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_my_n_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_my_s_", bundle: ..., traitCollection: ...)`
    static func tabbar_my_s_(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tabbar_my_s_, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "usercenter_consume_n", bundle: ..., traitCollection: ...)`
    static func usercenter_consume_n(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.usercenter_consume_n, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "usercenter_member_n", bundle: ..., traitCollection: ...)`
    static func usercenter_member_n(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.usercenter_member_n, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "usercenter_more_n", bundle: ..., traitCollection: ...)`
    static func usercenter_more_n(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.usercenter_more_n, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "usercenter_recharge_n", bundle: ..., traitCollection: ...)`
    static func usercenter_recharge_n(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.usercenter_recharge_n, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "usercenter_settings_n", bundle: ..., traitCollection: ...)`
    static func usercenter_settings_n(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.usercenter_settings_n, compatibleWithTraitCollection: traitCollection)
    }
    
    private init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    private init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    private init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    private init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.main)
    }
    
    private init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    private init() {}
  }
  
  private init() {}
}

struct _R {
  static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(NSLocale.init) ?? NSLocale.currentLocale()
  static let hostingBundle = NSBundle(identifier: "xs.cn.Reading") ?? NSBundle.mainBundle()
  
  struct nib {
    private init() {}
  }
  
  struct storyboard {
    struct launchScreen: StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIViewController
      
      let bundle = _R.hostingBundle
      let name = "LaunchScreen"
      
      private init() {}
    }
    
    struct main: StoryboardResourceWithInitialControllerType {
      typealias InitialController = ViewController
      
      let bundle = _R.hostingBundle
      let name = "Main"
      
      private init() {}
    }
    
    private init() {}
  }
  
  private init() {}
}